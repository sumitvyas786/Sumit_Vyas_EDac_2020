Q1.What is a sparse  array illustrate its importance with example.
A sparse array is an array of data in which many elements have a value of zero. This is in contrast to a dense array, where most of the elements have non-zero values or are “full” of numbers. A sparse array may be treated differently than a dense array in digital data handling.
For example, the function a = eye (10) creates 100 elements arranged as a 10 x 10 structure. In this array, 90 of those elements are zero! This matrix requires 100 elements, but only 10 of them contain nonzero data. This is an example of a sparse array or sparse matrix.




Q2. List  different keywords in javascript
Await 	break	case	catch	class
const	continue	debugger	default	delete
do	else	enum	export	extends
false	finally	for	function	if
implements	import	in	instanceof	interface
let	new	null	package	private
protected	public	return	super	switch
static	this	throw	try	true
typeof	var	void	while	with
yield	 			






Q3. Difference between == and === operators in javascript , illustrate with example
Double equals (==) is a comparison operator, which transforms the operands having the same type before comparison. 
So, when you compare string with a number, JavaScript converts any string to a number. An empty string is always converts to zero. A string with no numeric value is converts to NaN (Not a Number), which returns false
Example:
<!DOCTYPE html>
<html>
<body>

<p id="demonstration"></p>

<script>
  var a = 10;
  document.getElementById("demonstration").innerHTML = (a == 20);
</script>

</body>
</html>
=== (Triple equals) is a strict equality comparison operator in JavaScript, which returns false for the values which are not of a similar type. This operator performs type casting for equality. If we compare 2 with "2" using ===, then it will return a false value.
Example:
 <!DOCTYPE html>
<html>
<body>
<p id="demo"></p>
<script>
  var x = 10;
  document.getElementById("demo").innerHTML = (x === "10");
</script>
</body>
</html>






Q4. with example  Illustrate  type of operator
1.	<html>  
2.	<head>  
3.	<script>  
4.	document.write(typeof (45) + "<br>");  // results: "number"  
5.	document.write(typeof (-90) + "<br>");  // results: "number"  
6.	document.write(typeof (0) + "<br>");  // results: "number"  
7.	document.write(typeof (22.6) + "<br>");  // results: "number"  
8.	document.write(typeof (Infinity) + "<br>");  // results: "number"  
9.	document.write(typeof (NaN));  // results: "number". Although NaN is "Not-A-Number"  
10.	</script>  
11.	</head>  
12.	  
13.	<body>  
14.	</body>  
15.	</html>  







Q5. With a suitable example explain for loop in javascript.
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript For Loop</h2>

<p id="demo"></p>

<script>
var cars = ["BMW", "Volvo", "Saab", "Ford", "Fiat", "Audi"];
var text = "";
var i;
for (i = 0; i < cars.length; i++) {
  text += cars[i] + "<br>";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>
</html>








Q6. With suitable example explain date methods in javascript
Method	Description
Date()
It returns presents day’s date and time.
getDate()
It returns the day for the specified date.
getDay()
It returns the day of the week for the specified date.
getFullYear()
It returns the year of the specified date.
getYear()	This method returns the year in the specified date.
getHours()
It returns the hour in a specified date.
getMilliseconds()
It returns the milliseconds in the specified date.
getMinutes() 
It returns the minutes in the specified date.
getMonth()
It returns the month in the specified date. This also find the month.
getSeconds()
This method returns the seconds in the specified date.
getTime()
This method returns the date in terms of numeric value as milliseconds.
setDate()
This method sets the day of the month for a specified date.
setFullYear()
This method sets the full year for a specified date.
There are many more methods:
Below methods are returns all the values according to universal time: 
Methods	Description
getUTCDate()
It returns the day of a month for a specified date.
getUTCDay()
It returns the day of the week for a specified date.
getUTCFullYear()
This method returns the year for a specified date.
getUTCHours()
It returns the hours in a specified date.
getUTCMilliseconds()
This method returns the milliseconds form for a specified date.
getUTCMinutes()	This method returns the minutes in a specified date.
getUTCMonth()
This method returns the month for a specified date

